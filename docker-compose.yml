services:
  # Original template render (for testing)
  remotion-render:
    build: .
    container_name: remotion-render
    volumes:
      - ./out:/usr/src/app/out
    environment:
      - NODE_ENV=production
    command: ["node", "render.mjs"]

  # PR Video Generation (NEW)
  pr-video-render:
    build: .
    container_name: pr-video-render
    volumes:
      - ./out:/usr/src/app/out
    environment:
      - NODE_ENV=production
      # GitHub Configuration (set these via environment or .env file)
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_REPOSITORY=${GITHUB_REPOSITORY}
      - PR_NUMBER=${PR_NUMBER}
      - VIDEO_TYPE=${VIDEO_TYPE:-summary}
      - VIDEO_TITLE=${VIDEO_TITLE}
      - OUTPUT_NAME=${OUTPUT_NAME}
      # LLM Narrative Generation
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-http://ollama:11434}
      - NARRATIVE_MODEL=${NARRATIVE_MODEL:-llama3.1:8b}
      - PERSONA=${PERSONA:-executive}
    command: ["npx", "tsx", "render-pr-video.ts"]
    depends_on:
      ollama:
        condition: service_healthy
  
  remotion-dev:
    build: .
    container_name: remotion-dev
    volumes:
      - ./src:/usr/src/app/src
      - ./out:/usr/src/app/out
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    command: ["npm", "run", "dev"] 

  # Ollama LLM service for narrative generation
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:11434/api/tags"]
      interval: 10s
      timeout: 5s
      retries: 30
    environment:
      - OLLAMA_KEEP_ALIVE=5m
    command: ["serve"]

volumes:
  ollama: