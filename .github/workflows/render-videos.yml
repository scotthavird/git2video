name: Render Videos

on:
  workflow_run:
    workflows: ["Build and Publish Docker Image"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to generate video for (optional)'
        required: false
        type: string
      video_type:
        description: 'Video type for PR video'
        required: false
        default: 'summary'
        type: choice
        options:
          - summary
          - detailed
          - technical
      title:
        description: 'Default video title'
        required: false
        default: 'Hello World'
        type: string
      subtitle:
        description: 'Default video subtitle'
        required: false
        default: 'Welcome to Remotion'
        type: string
      content_header:
        description: 'Content section header'
        required: false
        default: 'Discover More'
        type: string
      outro_message:
        description: 'Outro message'
        required: false
        default: 'Thank You!'
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  render-pr-video:
    runs-on: ubuntu-latest
    # Run if build workflow succeeded AND there's a merged PR, OR if manually triggered with PR number
    if: |
      (github.event.workflow_run.conclusion == 'success' && 
       github.event.workflow_run.event == 'pull_request' && 
       contains(github.event.workflow_run.head_commit.message, 'Merge pull request')) ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.pr_number != '')
    
    permissions:
      contents: write
      packages: read
      pull-requests: read

    outputs:
      pr_number: ${{ steps.extract-pr.outputs.pr_number }}
      has_pr_video: ${{ steps.extract-pr.outputs.has_pr_video }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Extract PR number
      id: extract-pr
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "pr_number=${{ github.event.inputs.pr_number }}" >> $GITHUB_OUTPUT
          echo "has_pr_video=true" >> $GITHUB_OUTPUT
          echo "video_type=${{ github.event.inputs.video_type || 'summary' }}" >> $GITHUB_OUTPUT
          echo "trigger_type=manual" >> $GITHUB_OUTPUT
        else
          # Extract PR number from merge commit message
          PR_NUMBER=$(echo "${{ github.event.workflow_run.head_commit.message }}" | grep -oP 'Merge pull request #\K\d+' || echo "")
          if [ -n "$PR_NUMBER" ]; then
            echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
            echo "has_pr_video=true" >> $GITHUB_OUTPUT
            echo "video_type=summary" >> $GITHUB_OUTPUT
            echo "trigger_type=automatic" >> $GITHUB_OUTPUT
          else
            echo "has_pr_video=false" >> $GITHUB_OUTPUT
          fi
        fi

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create output directory
      run: mkdir -p ./output

    - name: Generate PR Video
      if: steps.extract-pr.outputs.has_pr_video == 'true'
      run: |
        docker run --rm \
          -v $(pwd)/output:/usr/src/app/out \
          -e GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} \
          -e GITHUB_REPOSITORY=${{ github.repository }} \
          -e PR_NUMBER=${{ steps.extract-pr.outputs.pr_number }} \
          -e VIDEO_TYPE=${{ steps.extract-pr.outputs.video_type }} \
          -e OUTPUT_NAME=pr-${{ steps.extract-pr.outputs.pr_number }}-${{ steps.extract-pr.outputs.trigger_type }} \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main \
          npx tsx render-pr-video.ts

    - name: Upload PR Video as Artifact
      if: steps.extract-pr.outputs.has_pr_video == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: pr-video-${{ steps.extract-pr.outputs.pr_number }}
        path: ./output/*.mp4
        retention-days: 90

  render-default-video:
    runs-on: ubuntu-latest
    # Run if build workflow succeeded OR if manually triggered
    if: |
      github.event.workflow_run.conclusion == 'success' || 
      github.event_name == 'workflow_dispatch'
    
    permissions:
      contents: write
      packages: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create output directory
      run: mkdir -p ./output

    - name: Run default video render container
      run: |
        docker run --rm \
          -v $(pwd)/output:/usr/src/app/out \
          -e TITLE="${{ github.event.inputs.title || 'Hello World' }}" \
          -e SUBTITLE="${{ github.event.inputs.subtitle || 'Welcome to Remotion' }}" \
          -e CONTENT_HEADER="${{ github.event.inputs.content_header || 'Discover More' }}" \
          -e OUTRO_MESSAGE="${{ github.event.inputs.outro_message || 'Thank You!' }}" \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main

    - name: Upload default video as artifact
      uses: actions/upload-artifact@v4
      with:
        name: default-video
        path: ./output/*.mp4
        retention-days: 90

  comment-on-pr:
    runs-on: ubuntu-latest
    needs: [render-pr-video]
    if: |
      needs.render-pr-video.outputs.has_pr_video == 'true' && 
      github.event.workflow_run.event == 'pull_request'
    
    permissions:
      pull-requests: write

    steps:
    - name: Comment on PR with Video Link
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = ${{ needs.render-pr-video.outputs.pr_number }};
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            body: `ðŸŽ¬ **PR Video Generated Automatically!**
            
            Your pull request has been automatically converted into a video summary.
            
            ðŸ“¹ **Video will be available in the next release**
            
            **Video Details:**
            - **Type**: summary
            - **Generated**: When this PR was merged
            
            The video includes:
            - Overview of changes made
            - Key files modified
            - Visual diff highlights
            
            Generated automatically when this PR was merged into the main branch.`
          });